<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.15 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-idempotency-header-00" category="std">

  <front>
    <title>The Idempotency HTTP Header Field</title>

    <author initials="J." surname="Jena" fullname="Jayadeba Jena">
      <organization>PayPal, Inc.</organization>
      <address>
        <postal>
          <country>US</country>
        </postal>
        <email>jjena@paypal.com</email>
      </address>
    </author>
    <author initials="S." surname="Dalal" fullname="Sanjay Dalal">
      <organization></organization>
      <address>
        <postal>
          <country>US</country>
        </postal>
        <email>sanjay.dalal@cal.berkeley.edu</email>
        <uri>https://github.com/sdatspun2</uri>
      </address>
    </author>

    <date year="2020" month="November" day="22"/>

    
    
    

    <abstract>


<t>The <spanx style="verb">HTTP</spanx> Idempotency request header field can be used to carry idempotency key in order to make non-idempotent <spanx style="verb">HTTP</spanx> methods such as <spanx style="verb">POST</spanx> or <spanx style="verb">PATCH</spanx> fault-tolerant.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Idempotence is the property of certain operations in mathematics and computer science whereby they can be applied multiple times without changing the result beyond the initial application. It does not matter if the operation is called only once, or 10s of times over. The result <spanx style="verb">SHOULD</spanx> be the same.</t>

<t>Idempotency is important in building a fault-tolerant <spanx style="verb">HTTP API</spanx>. An <spanx style="verb">HTTP</spanx> request method is considered <spanx style="verb">idempotent</spanx> if the intended effect on the server of multiple identical requests with that method is the same as the effect for a single such request. According to <xref target="RFC7231"/>, <spanx style="verb">HTTP</spanx> methods <spanx style="verb">OPTIONS</spanx>, <spanx style="verb">HEAD</spanx>, <spanx style="verb">GET</spanx>, <spanx style="verb">PUT</spanx> and <spanx style="verb">DELETE</spanx> are idempotent while methods <spanx style="verb">POST</spanx> and <spanx style="verb">PATCH</spanx> are not.</t>

<t>Let’s say a client of an <spanx style="verb">HTTP API</spanx> wants to create (or update) a resource using a <spanx style="verb">POST</spanx> method. Since <spanx style="verb">POST</spanx> is <spanx style="verb">NOT</spanx> an idempotent method, calling it multiple times can result in duplication or wrong updates. Consider a scenario where the client sent a <spanx style="verb">POST</spanx> request to the server, but it got a timeout. Following questions arise. Is the resource actually created (or updated)? Did the timeout occur during sending of the request, or when receiving of the response? Can the client safely retry the request, or does it need to figure out what happened in the first place? If <spanx style="verb">POST</spanx> had been an idempotent method, such questions may not arise. Client would safely retry a request until it actually gets a valid response from the server.</t>

<t>For many use cases of <spanx style="verb">HTTP API</spanx>, duplicate resource is a severe problem from business perspective. For example, duplicate records for requests involving any kind of money transfer <spanx style="verb">MUST NOT</spanx> be allowed. In other cases, processing of duplicate webhook delivery is not expected.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the Augmented Backus-Naur Form (ABNF) notation of <xref target="RFC5234"/> and includes, by reference, the IMF-fixdate rule as defined in Section 7.1.1.1 of <xref target="RFC7231"/>.</t>

<t>The term “resource” is to be interpreted as defined in Section 2 of <xref target="RFC7231"/>, that is identified by an URI. The term “resource server” is to be interpreted as “origin server” as defined in Section 3 of <xref target="RFC7231"/>.</t>

</section>
</section>
<section anchor="the-idempotency-http-request-header-field" title="The Idempotency HTTP Request Header Field">

<t>An idempotency key is a unique value generated by the client which the resource server uses to recognize subsequent retries of the same request. The <spanx style="verb">Idempotency-Key</spanx> HTTP request header field carries this key.</t>

<section anchor="syntax" title="Syntax">

<t>The <spanx style="verb">Idempotency-Key</spanx> request header field describes</t>

<figure><artwork><![CDATA[
Idempotency-Key       = idempotency-key-value

idempotency-key-value = opaque-value
opaque-value          = DQUOTE *idempotencyvalue DQUOTE
idempotencyvalue      = %x21 / %x23-7E / obs-text
       ; VCHAR except double quotes, plus obs-text
]]></artwork></figure>

<t>Clients MUST NOT include more than one <spanx style="verb">Idempotency-Key</spanx> header field in the same request.</t>

<t>The following example shows an idempotency key using <spanx style="verb">UUID</spanx> <xref target="RFC4122"/>:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "8e03978e-40d5-43e8-bc93-6894a57f9324"
]]></artwork></figure>

</section>
<section anchor="uniqueness-of-idempotency-key" title="Uniqueness of Idempotency Key">

<t>The idempotency key that is supplied as part of every <spanx style="verb">POST</spanx> request MUST be unique and <spanx style="verb">MUST</spanx> not be reused with another request with a different request payload.</t>

<t>Uniqueness of the key <spanx style="verb">MUST</spanx> be defined by the resource owner and <spanx style="verb">MUST</spanx> be implemented by the clients of the resource server. It is <spanx style="verb">RECOMMENDED</spanx> that <spanx style="verb">UUID</spanx> <xref target="RFC4122"/> or a similar random identifier be used as an idempotency key.</t>

</section>
<section anchor="idempotency-key-validity-and-expiry" title="Idempotency Key Validity and Expiry">

<t>The resource MAY enforce time based idempotency keys, thus, be able to purge or delete a key upon its expiry. The resource server SHOULD define such expiration policy and publish in related documentation.</t>

</section>
<section anchor="idempotency-fingerprint" title="Idempotency Fingerprint">

<t>An idempotency fingerprint MAY be used in conjunction with an idempotency key to determine the uniqueness of a request. Such a fingerprint is generated from request payload data by the resource server. An idempotency fingerprint generation algorithm MAY use one of the following or similar approaches to create a fingerprint.</t>

<t><list style="symbols">
  <t>Checksum of the entire request payload.</t>
  <t>Checksum of selected element(s) in the request payload.</t>
  <t>Field value match for each field in the request payload.</t>
  <t>Field value match for selected element(s) in the request payload.</t>
  <t>Request digest/signature.</t>
</list></t>

</section>
<section anchor="responsibilities" title="Responsibilities">

<t>Client</t>

<t>Clients of <spanx style="verb">HTTP API</spanx> requiring idempotency, SHOULD understand the idempotency related requirements as published by the server and use appropriate algorithm to generate idempotency keys.</t>

<t>For each request, client SHOULD</t>

<t><list style="symbols">
  <t>Send a unique idempotency key in the HTTP <spanx style="verb">Idempotency-Key</spanx> request header field.</t>
</list></t>

<t>Resource Server</t>

<t>Resource server MUST publish idempotency related specification. This specification MUST include expiration related policy if applicable. Server is responsible for managing the lifecycle of the idempotency key.</t>

<t>For each request, server SHOULD</t>

<t><list style="symbols">
  <t>Identify idempotency key from the HTTP <spanx style="verb">Idempotency-Key</spanx> request header field.</t>
  <t>Generate idempotency fingerprint if required.</t>
  <t>Check for idempotency considering various scenarios including the ones described in section below.</t>
</list></t>

</section>
<section anchor="idempotency-enforcement-scenarios" title="Idempotency Enforcement Scenarios">

<t><list style="symbols">
  <t>First time request (idempotency key or fingerprint has not been seen)  <vspace blankLines='1'/>
The resource server SHOULD process the request normally and respond with an appropriate response and status code.</t>
  <t>Duplicate request (idempotency key or fingerprint has been seen)  <vspace blankLines='1'/>
Retry  <vspace blankLines='1'/>
The request was retried after the original request completed. The resource server MUST respond with the result of the previously completed operation, success or an error.  <vspace blankLines='1'/>
Concurrent Request  <vspace blankLines='1'/>
The request was retried before the original request completed. The resource server MUST respond with a resource conflict error. See Error Scenarios for details.</t>
</list></t>

</section>
<section anchor="error-scenarios" title="Error Scenarios">

<t>If the <spanx style="verb">Idempotency-Key</spanx> request header is missing for a documented idempotent operation requiring this header, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">400</spanx> status code with body containing a link pointing to relevant documentation. Alternately, using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, the client can be informed about the error as shown below.</t>

<figure><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Link: <https://developer.example.com/idempotency>;
  rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If there is an attempt to reuse an idempotency key with a different request payload, the resource server MUST reply with a <spanx style="verb">HTTP</spanx> <spanx style="verb">422</spanx> status code with body containing a link pointing to relevant documentation. The status code <spanx style="verb">422</spanx> is defined in Section 11.2 of <xref target="RFC4918"/>. The server can also inform the client using <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx> as shown below.</t>

<figure><artwork><![CDATA[
HTTP/1.1 422 Unprocessable Entity
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If there is an attempt to reuse an idempotency key that has expired, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">422</spanx> status code with body containing a link pointing to the relevant documentation. Using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, client can be informed about the error as shown below.</t>

<figure><artwork><![CDATA[
HTTP/1.1 422 Unprocessable Entity
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If the request is replayed, while the original request is still processing, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">409</spanx> status code with body containing a link pointing to the relevant documentation. Using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, client can be informed as well.</t>

<figure><artwork><![CDATA[
HTTP/1.1 409 Conflict
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>For other errors, the resource MUST return the appropriate status code and error message.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="the-idempotency-key-http-request-header-field" title="The Idempotency-Key HTTP Request Header Field">

<t>The <spanx style="verb">Idempotency-Key</spanx> request header should be added to the permanent registry of message header fields (see <xref target="RFC3864"/>), taking into account the guidelines given by HTTP/1.1 <xref target="RFC7231"/>.</t>

<figure><artwork><![CDATA[
Header Field Name: Idempotency-Key

Applicable Protocol: Hypertext Transfer Protocol (HTTP)

Status: Standard

Authors:
        Jayadeba Jena
        Email: jjena@paypal.com


        Sanjay Dalal
        Email: sanjay.dalal@cal.berkeley.edu

Change controller: IETF

Specification document: this specification,
            Section 2 "The Idempotency HTTP Request Header Field"
]]></artwork></figure>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>Note to RFC Editor: Please remove this section before publication.</t>

<t>This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in <xref target="RFC7942"/>.  The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs.  Please note that the listing of any individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors.  This is not intended as, and must not be construed to be, a catalog of available implementations or their features.  Readers are advised to note that
other implementations may exist.</t>

<t>According to RFC 7942, “this will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature. It is up to the individual working groups to use this information as they see fit”.</t>

<t>Organization: Stripe</t>

<t><list style="symbols">
  <t>Description: Stripe uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference:  https://stripe.com/docs/idempotency</t>
</list></t>

<t>Organization: Adyen</t>

<t><list style="symbols">
  <t>Description: Adyen uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://docs.adyen.com/development-resources/api-idempotency/</t>
</list></t>

<t>Organization: Dwolla</t>

<t><list style="symbols">
  <t>Description: Dwolla uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://docs.dwolla.com/</t>
</list></t>

<t>Organization: Interledger</t>

<t><list style="symbols">
  <t>Description: Interledger uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://github.com/interledger/</t>
</list></t>

<t>Organization: WorldPay</t>

<t><list style="symbols">
  <t>Description: WorldPay uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://developer.worldpay.com/docs/wpg/idempotency</t>
</list></t>

<t>Organization: Yandex</t>

<t><list style="symbols">
  <t>Description: Yandex uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://cloud.yandex.com/docs/api-design-guide/concepts/idempotency</t>
</list></t>

<section anchor="implementing-the-concept" title="Implementing the Concept">

<t>This is a list of implementations that implement the general concept, but do so using different mechanisms:</t>

<t>Organization: Django</t>

<t><list style="symbols">
  <t>Description: Django uses custom HTTP header named <spanx style="verb">HTTP_IDEMPOTENCY_KEY</spanx></t>
  <t>Reference:  https://pypi.org/project/django-idempotency-key</t>
</list></t>

<t>Organization: Twilio</t>

<t><list style="symbols">
  <t>Description: Twilio uses custom HTTP header named <spanx style="verb">I-Twilio-Idempotency-Token</spanx> in webhooks</t>
  <t>Reference: https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides</t>
</list></t>

<t>Organization: PayPal</t>

<t><list style="symbols">
  <t>Description: PayPal uses custom HTTP header named <spanx style="verb">PayPal-Request-Id</spanx></t>
  <t>Reference:  https://developer.paypal.com/docs/business/develop/idempotency</t>
</list></t>

<t>Organization: RazorPay</t>

<t><list style="symbols">
  <t>Description: RazorPay uses custom HTTP header named <spanx style="verb">X-Payout-Idempotency</spanx></t>
  <t>Reference: https://razorpay.com/docs/razorpayx/api/idempotency/</t>
</list></t>

<t>Organization: OpenBanking</t>

<t><list style="symbols">
  <t>Description: OpenBanking uses custom HTTP header called <spanx style="verb">x-idempotency-key</spanx></t>
  <t>Reference: https://openbankinguk.github.io/read-write-api-site3/v3.1.6/profiles/read-write-data-api-profile.html#request-headers</t>
</list></t>

<t>Organization: Square</t>

<t><list style="symbols">
  <t>Description: To make an idempotent API call, Square recommends adding a property named <spanx style="verb">idempotency_key</spanx> with a unique value in the request body.</t>
  <t>Reference: https://developer.squareup.com/docs/build-basics/using-rest-api</t>
</list></t>

<t>Organization: Google Standard Payments</t>

<t><list style="symbols">
  <t>Description: Google Standard Payments API uses a property named <spanx style="verb">requestId</spanx> in request body in order to provider idempotency in various use cases.</t>
  <t>Reference: https://developers.google.com/standard-payments/payment-processor-service-api/rest/v1/TopLevel/capture</t>
</list></t>

<t>Organization: BBVA</t>

<t><list style="symbols">
  <t>Description: BBVA Open Platform uses custom HTTP header called <spanx style="verb">X-Unique-Transaction-ID</spanx></t>
  <t>Reference: https://bbvaopenplatform.com/apiReference/APIbasics/content/x-unique-transaction-id</t>
</list></t>

<t>Organization: WebEngage</t>

<t><list style="symbols">
  <t>Description: WebEngage uses custom HTTP header called <spanx style="verb">x-request-id</spanx> to identify webhook POST requests uniquely to achieve events idempotency.</t>
  <t>Reference: https://docs.webengage.com/docs/webhooks</t>
</list></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This section is meant to inform developers, information providers,
and users of known security concerns specific to the idempotency keys.</t>

<t>For idempotent request handling, the resources MAY make use of the value in the idempotency key to look up a cache or a persistent store for duplicate requests matching the key. If the resource does not validate the value of the idempotency key prior to performing such a lookup, it MAY lead to various forms of security attacks and compromise. To avoid such situations, the resource SHOULD publish the expected format of the idempotency key, algorithm used to generate it and always validate the key value as per the published specification before processing any request.</t>

</section>
<section anchor="examples" title="Examples">

<t>The first example shows an idempotency-key header field with key value using UUID version 4 scheme:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "8e03978e-40d5-43e8-bc93-6894a57f9324"
]]></artwork></figure>

<t>Second example shows an idempotency-key header field with key value using some random string generator:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "clkyoesmbgybucifusbbtdsbohtyuuwz"
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC4122" target='https://www.rfc-editor.org/info/rfc4122'>
<front>
<title>A Universally Unique IDentifier (UUID) URN Namespace</title>
<author initials='P.' surname='Leach' fullname='P. Leach'><organization /></author>
<author initials='M.' surname='Mealling' fullname='M. Mealling'><organization /></author>
<author initials='R.' surname='Salz' fullname='R. Salz'><organization /></author>
<date year='2005' month='July' />
<abstract><t>This specification defines a Uniform Resource Name namespace for UUIDs (Universally Unique IDentifier), also known as GUIDs (Globally Unique IDentifier).  A UUID is 128 bits long, and can guarantee uniqueness across space and time.  UUIDs were originally used in the Apollo Network Computing System and later in the Open Software Foundation\'s (OSF) Distributed Computing Environment (DCE), and then in Microsoft Windows platforms.</t><t>This specification is derived from the DCE specification with the kind permission of the OSF (now known as The Open Group).  Information from earlier versions of the DCE specification have been incorporated into this document.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4122'/>
<seriesInfo name='DOI' value='10.17487/RFC4122'/>
</reference>



<reference  anchor="RFC4918" target='https://www.rfc-editor.org/info/rfc4918'>
<front>
<title>HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault' role='editor'><organization /></author>
<date year='2007' month='June' />
<abstract><t>Web Distributed Authoring and Versioning (WebDAV) consists of a set of methods, headers, and content-types ancillary to HTTP/1.1 for the management of resource properties, creation and management of resource collections, URL namespace manipulation, and resource locking (collision avoidance).</t><t>RFC 2518 was published in February 1999, and this specification obsoletes RFC 2518 with minor revisions mostly due to interoperability experience.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4918'/>
<seriesInfo name='DOI' value='10.17487/RFC4918'/>
</reference>



<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7942" target='https://www.rfc-editor.org/info/rfc7942'>
<front>
<title>Improving Awareness of Running Code: The Implementation Status Section</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='A.' surname='Farrel' fullname='A. Farrel'><organization /></author>
<date year='2016' month='July' />
<abstract><t>This document describes a simple process that allows authors of Internet-Drafts to record the status of known implementations by including an Implementation Status section.  This will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature.</t><t>This process is not mandatory.  Authors of Internet-Drafts are encouraged to consider using the process for their documents, and working groups are invited to think about applying the process to all of their protocol specifications.  This document obsoletes RFC 6982, advancing it to a Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='205'/>
<seriesInfo name='RFC' value='7942'/>
<seriesInfo name='DOI' value='10.17487/RFC7942'/>
</reference>




    </references>


<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Mark Nottingham for his support for this Internet Draft. We would like to acknowledge that this draft is inspired by Idempotency related patterns described in API documentation of <eref target="https://github.com/paypal/api-standards/blob/master/patterns.md#idempotency">PayPal</eref> and <eref target="https://stripe.com/docs/idempotency">Stripe</eref> as well as Internet Draft on <eref target="https://tools.ietf.org/html/draft-nottingham-http-poe-00">POST Once Exactly</eref> authored by Mark Nottingham.</t>

<t>The authors take all responsibility for errors and omissions.</t>

</section>
<section anchor="appendix" title="Appendix">

<section anchor="appendix-a-imported-abnf" title="Appendix A.  Imported ABNF">

<t>The following core rules are included by reference, as defined in Appendix B.1 of <xref target="RFC5234"/>: ALPHA (letters), CR (carriage return), CRLF (CR LF), CTL (controls), DIGIT (decimal 0-9), DQUOTE (double quote), HEXDIG (hexadecimal 0-9/A-F/a-f), LF (line feed), OCTET (any 8-bit sequence of data), SP (space), and VCHAR (any visible US-ASCII character).</t>

<t>The rules below are defined in <xref target="RFC7230"/>:</t>

<figure><artwork><![CDATA[
 obs-text      = <obs-text, see [RFC7230], Section 3.2.6>
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAF+tul8AA807a3PbxrXf+Sv2ytO5UoYg9UpsK01TWqJiprKl6pEmk8mE
S2BJrgViUexCFJPxf+957OJBUrbbuHOvMjFJYHH2vF97EEVRJzaJzmYnonTT
6EWn47RL1Ym4nSsxStQiN05l8Uq8vr29Eq+VTFQhzrVKk05i4kwuYGlSyKmL
dL04mtO6aH+/E0unZqZYnQjrko7OixPhitK6w/39l/uHHetklvwqU5MBnJWy
nVyfiJ+dibsC/tFZojLXFdYUrlBTC99WC//FFTqGW7FZ5NJ/WcBiuKWzVGfq
l05Hlm5uipOOEBH8L+CGPRHf98T3KpN0gdH/Xq4A24msr5tiJjP9m3TaZCfi
Sq6uZNoVoyzu0W21kDo9Ee/ewfq/5nKVy7QH29O92JSZQ3Lvbjr4B3sL/1fj
cNMTZzKVaQOJG5m9k6vGZb+Jpeu9BK//NYaNJqq4V6la9VRS0sKyAJbNncvt
Sb8/025eThCbvk2ks3mZHW7BKzPFAqh7UCedjs6mjV+dKIqEnAB7gaudDmrB
GEU/bilDof5ZKusEy1lMUR9ELDMxUaK0KgHhwc+iWImGVoh7Bb8z4C4+AysW
8l6JzGS16riw2UKB6BIrbBnPhbRifHV5czuGR+Hb4Pb09VhMZZm6yJlUFTJz
PUZ8oZMkVZ3OMxCWK0xSxijCTqfGXQlthQOq8sLkqnArYaYihi8SMYMrJHSL
eAJP5goZE1sBWkqqVjpA3caaIC3nqlCTFYJbBeplnqcaGLAA7HSeKuH0Qlmx
BLmY0ol4LrMZWBuhUCgLq+CplQHweEVn2mmZMpSYUOmJkROJARiZcYgTYqCn
tLzCF4kC5UhhY5OlQBOg10VuHexbJJCRMA+q6JFh+53HN68v7y7Oxog4wrOg
ir0mt1YIWMMP4A8IB5gyKXWK7kLINQmw5MTgajTuiUEWBBk0hQVKeAJ7QeAF
4DquBT8ONOkMfiZwU02nKnZACqOmCsAeaak4q9E5AJfSsAmzGZbL5n6BMFQj
/O7hgtIDDRZIAVCkZh4KYB/HoKMkJSN+//1/rs9Pnx8eHbx/311Xz/Hl1e3o
8u3NGO8MB2f4+d3wFj+u7kBfUW3GZ8OL4e0QfhRKNDR9OdewcwWJFZwe8BqO
60HmIJAL5f4XbAH8gxQxqBc8DYyQWYPnYgkysGR3hQKfK3aBvjIHH6D24CkQ
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

-->

</rfc>

