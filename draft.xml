<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.15 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-idempotency-header-01" category="std">

  <front>
    <title>The Idempotency HTTP Header Field</title>

    <author initials="J." surname="Jena" fullname="Jayadeba Jena">
      <organization>PayPal, Inc.</organization>
      <address>
        <postal>
          <country>US</country>
        </postal>
        <email>jjena@paypal.com</email>
      </address>
    </author>
    <author initials="S." surname="Dalal" fullname="Sanjay Dalal">
      <organization></organization>
      <address>
        <postal>
          <country>US</country>
        </postal>
        <email>sanjay.dalal@cal.berkeley.edu</email>
        <uri>https://github.com/sdatspun2</uri>
      </address>
    </author>

    <date year="2020" month="November" day="23"/>

    
    
    

    <abstract>


<t>The <spanx style="verb">HTTP</spanx> Idempotency request header field can be used to carry idempotency key in order to make non-idempotent <spanx style="verb">HTTP</spanx> methods such as <spanx style="verb">POST</spanx> or <spanx style="verb">PATCH</spanx> fault-tolerant.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Idempotence is the property of certain operations in mathematics and computer science whereby they can be applied multiple times without changing the result beyond the initial application. It does not matter if the operation is called only once, or 10s of times over. The result <spanx style="verb">SHOULD</spanx> be the same.</t>

<t>Idempotency is important in building a fault-tolerant <spanx style="verb">HTTP API</spanx>. An <spanx style="verb">HTTP</spanx> request method is considered <spanx style="verb">idempotent</spanx> if the intended effect on the server of multiple identical requests with that method is the same as the effect for a single such request. According to <xref target="RFC7231"/>, <spanx style="verb">HTTP</spanx> methods <spanx style="verb">OPTIONS</spanx>, <spanx style="verb">HEAD</spanx>, <spanx style="verb">GET</spanx>, <spanx style="verb">PUT</spanx> and <spanx style="verb">DELETE</spanx> are idempotent while methods <spanx style="verb">POST</spanx> and <spanx style="verb">PATCH</spanx> are not.</t>

<t>Let’s say a client of an <spanx style="verb">HTTP API</spanx> wants to create (or update) a resource using a <spanx style="verb">POST</spanx> method. Since <spanx style="verb">POST</spanx> is <spanx style="verb">NOT</spanx> an idempotent method, calling it multiple times can result in duplication or wrong updates. Consider a scenario where the client sent a <spanx style="verb">POST</spanx> request to the server, but it got a timeout. Following questions arise :  Is the resource actually created (or updated)? Did the timeout occur during sending of the request, or when receiving of the response? Can the client safely retry the request, or does it need to figure out what happened in the first place? If <spanx style="verb">POST</spanx> had been an idempotent method, such questions may not arise. Client would safely retry a request until it actually gets a valid response from the server.</t>

<t>For many use cases of <spanx style="verb">HTTP API</spanx>, duplicate resource is a severe problem from business perspective. For example, duplicate records for requests involving any kind of money transfer <spanx style="verb">MUST NOT</spanx> be allowed. In other cases, processing of duplicate webhook delivery is not expected.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the Augmented Backus-Naur Form (ABNF) notation of <xref target="RFC5234"/> and includes, by reference, the IMF-fixdate rule as defined in Section 7.1.1.1 of <xref target="RFC7231"/>.</t>

<t>The term “resource” is to be interpreted as defined in Section 2 of <xref target="RFC7231"/>, that is identified by an URI. The term “resource server” is to be interpreted as “origin server” as defined in Section 3 of <xref target="RFC7231"/>.</t>

</section>
</section>
<section anchor="the-idempotency-http-request-header-field" title="The Idempotency HTTP Request Header Field">

<t>An idempotency key is a unique value generated by the client which the resource server uses to recognize subsequent retries of the same request. The <spanx style="verb">Idempotency-Key</spanx> HTTP request header field carries this key.</t>

<section anchor="syntax" title="Syntax">

<t>The <spanx style="verb">Idempotency-Key</spanx> request header field describes</t>

<figure><artwork><![CDATA[
Idempotency-Key       = idempotency-key-value

idempotency-key-value = opaque-value
opaque-value          = DQUOTE *idempotencyvalue DQUOTE
idempotencyvalue      = %x21 / %x23-7E / obs-text
       ; VCHAR except double quotes, plus obs-text
]]></artwork></figure>

<t>Clients MUST NOT include more than one <spanx style="verb">Idempotency-Key</spanx> header field in the same request.</t>

<t>The following example shows an idempotency key using <spanx style="verb">UUID</spanx> <xref target="RFC4122"/>:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "8e03978e-40d5-43e8-bc93-6894a57f9324"
]]></artwork></figure>

</section>
<section anchor="uniqueness-of-idempotency-key" title="Uniqueness of Idempotency Key">

<t>The idempotency key that is supplied as part of every <spanx style="verb">POST</spanx> request MUST be unique and <spanx style="verb">MUST</spanx> not be reused with another request with a different request payload.</t>

<t>Uniqueness of the key <spanx style="verb">MUST</spanx> be defined by the resource owner and <spanx style="verb">MUST</spanx> be implemented by the clients of the resource server. It is <spanx style="verb">RECOMMENDED</spanx> that <spanx style="verb">UUID</spanx> <xref target="RFC4122"/> or a similar random identifier be used as an idempotency key.</t>

</section>
<section anchor="idempotency-key-validity-and-expiry" title="Idempotency Key Validity and Expiry">

<t>The resource MAY enforce time based idempotency keys, thus, be able to purge or delete a key upon its expiry. The resource server SHOULD define such expiration policy and publish in related documentation.</t>

</section>
<section anchor="idempotency-fingerprint" title="Idempotency Fingerprint">

<t>An idempotency fingerprint MAY be used in conjunction with an idempotency key to determine the uniqueness of a request. Such a fingerprint is generated from request payload data by the resource server. An idempotency fingerprint generation algorithm MAY use one of the following or similar approaches to create a fingerprint.</t>

<t><list style="symbols">
  <t>Checksum of the entire request payload.</t>
  <t>Checksum of selected element(s) in the request payload.</t>
  <t>Field value match for each field in the request payload.</t>
  <t>Field value match for selected element(s) in the request payload.</t>
  <t>Request digest/signature.</t>
</list></t>

</section>
<section anchor="responsibilities" title="Responsibilities">

<t>Client</t>

<t>Clients of <spanx style="verb">HTTP API</spanx> requiring idempotency, SHOULD understand the idempotency related requirements as published by the server and use appropriate algorithm to generate idempotency keys.</t>

<t>For each request, client SHOULD</t>

<t><list style="symbols">
  <t>Send a unique idempotency key in the HTTP <spanx style="verb">Idempotency-Key</spanx> request header field.</t>
</list></t>

<t>Resource Server</t>

<t>Resource server MUST publish idempotency related specification. This specification MUST include expiration related policy if applicable. Server is responsible for managing the lifecycle of the idempotency key.</t>

<t>For each request, server SHOULD</t>

<t><list style="symbols">
  <t>Identify idempotency key from the HTTP <spanx style="verb">Idempotency-Key</spanx> request header field.</t>
  <t>Generate idempotency fingerprint if required.</t>
  <t>Check for idempotency considering various scenarios including the ones described in section below.</t>
</list></t>

</section>
<section anchor="idempotency-enforcement-scenarios" title="Idempotency Enforcement Scenarios">

<t><list style="symbols">
  <t>First time request (idempotency key or fingerprint has not been seen)  <vspace blankLines='1'/>
The resource server SHOULD process the request normally and respond with an appropriate response and status code.</t>
  <t>Duplicate request (idempotency key or fingerprint has been seen)  <vspace blankLines='1'/>
Retry  <vspace blankLines='1'/>
The request was retried after the original request completed. The resource server MUST respond with the result of the previously completed operation, success or an error.  <vspace blankLines='1'/>
Concurrent Request  <vspace blankLines='1'/>
The request was retried before the original request completed. The resource server MUST respond with a resource conflict error. See Error Scenarios for details.</t>
</list></t>

</section>
<section anchor="error-scenarios" title="Error Scenarios">

<t>If the <spanx style="verb">Idempotency-Key</spanx> request header is missing for a documented idempotent operation requiring this header, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">400</spanx> status code with body containing a link pointing to relevant documentation. Alternately, using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, the client can be informed about the error as shown below.</t>

<figure><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Link: <https://developer.example.com/idempotency>;
  rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If there is an attempt to reuse an idempotency key with a different request payload, the resource server MUST reply with a <spanx style="verb">HTTP</spanx> <spanx style="verb">422</spanx> status code with body containing a link pointing to relevant documentation. The status code <spanx style="verb">422</spanx> is defined in Section 11.2 of <xref target="RFC4918"/>. The server can also inform the client by using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx> as shown below.</t>

<figure><artwork><![CDATA[
HTTP/1.1 422 Unprocessable Entity
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If the request is retried, while the original request is still being processed, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">409</spanx> status code with body containing a link or the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx> pointing to the relevant documentation.</t>

<figure><artwork><![CDATA[
HTTP/1.1 409 Conflict
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>For other errors, the resource MUST return the appropriate status code and error message.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="the-idempotency-key-http-request-header-field" title="The Idempotency-Key HTTP Request Header Field">

<t>The <spanx style="verb">Idempotency-Key</spanx> request header should be added to the permanent registry of message header fields (see <xref target="RFC3864"/>), taking into account the guidelines given by HTTP/1.1 <xref target="RFC7231"/>.</t>

<figure><artwork><![CDATA[
Header Field Name: Idempotency-Key

Applicable Protocol: Hypertext Transfer Protocol (HTTP)

Status: Standard

Authors:
        Jayadeba Jena
        Email: jjena@paypal.com


        Sanjay Dalal
        Email: sanjay.dalal@cal.berkeley.edu

Change controller: IETF

Specification document: this specification,
            Section 2 "The Idempotency HTTP Request Header Field"
]]></artwork></figure>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>Note to RFC Editor: Please remove this section before publication.</t>

<t>This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in <xref target="RFC7942"/>.  The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs.  Please note that the listing of any individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors.  This is not intended as, and must not be construed to be, a catalog of available implementations or their features.  Readers are advised to note that
other implementations may exist.</t>

<t>According to RFC 7942, “this will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature. It is up to the individual working groups to use this information as they see fit”.</t>

<t>Organization: Stripe</t>

<t><list style="symbols">
  <t>Description: Stripe uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference:  https://stripe.com/docs/idempotency</t>
</list></t>

<t>Organization: Adyen</t>

<t><list style="symbols">
  <t>Description: Adyen uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://docs.adyen.com/development-resources/api-idempotency/</t>
</list></t>

<t>Organization: Dwolla</t>

<t><list style="symbols">
  <t>Description: Dwolla uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://docs.dwolla.com/</t>
</list></t>

<t>Organization: Interledger</t>

<t><list style="symbols">
  <t>Description: Interledger uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://github.com/interledger/</t>
</list></t>

<t>Organization: WorldPay</t>

<t><list style="symbols">
  <t>Description: WorldPay uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://developer.worldpay.com/docs/wpg/idempotency</t>
</list></t>

<t>Organization: Yandex</t>

<t><list style="symbols">
  <t>Description: Yandex uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://cloud.yandex.com/docs/api-design-guide/concepts/idempotency</t>
</list></t>

<section anchor="implementing-the-concept" title="Implementing the Concept">

<t>This is a list of implementations that implement the general concept, but do so using different mechanisms:</t>

<t>Organization: Django</t>

<t><list style="symbols">
  <t>Description: Django uses custom HTTP header named <spanx style="verb">HTTP_IDEMPOTENCY_KEY</spanx></t>
  <t>Reference:  https://pypi.org/project/django-idempotency-key</t>
</list></t>

<t>Organization: Twilio</t>

<t><list style="symbols">
  <t>Description: Twilio uses custom HTTP header named <spanx style="verb">I-Twilio-Idempotency-Token</spanx> in webhooks</t>
  <t>Reference: https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides</t>
</list></t>

<t>Organization: PayPal</t>

<t><list style="symbols">
  <t>Description: PayPal uses custom HTTP header named <spanx style="verb">PayPal-Request-Id</spanx></t>
  <t>Reference:  https://developer.paypal.com/docs/business/develop/idempotency</t>
</list></t>

<t>Organization: RazorPay</t>

<t><list style="symbols">
  <t>Description: RazorPay uses custom HTTP header named <spanx style="verb">X-Payout-Idempotency</spanx></t>
  <t>Reference: https://razorpay.com/docs/razorpayx/api/idempotency/</t>
</list></t>

<t>Organization: OpenBanking</t>

<t><list style="symbols">
  <t>Description: OpenBanking uses custom HTTP header called <spanx style="verb">x-idempotency-key</spanx></t>
  <t>Reference: https://openbankinguk.github.io/read-write-api-site3/v3.1.6/profiles/read-write-data-api-profile.html#request-headers</t>
</list></t>

<t>Organization: Square</t>

<t><list style="symbols">
  <t>Description: To make an idempotent API call, Square recommends adding a property named <spanx style="verb">idempotency_key</spanx> with a unique value in the request body.</t>
  <t>Reference: https://developer.squareup.com/docs/build-basics/using-rest-api</t>
</list></t>

<t>Organization: Google Standard Payments</t>

<t><list style="symbols">
  <t>Description: Google Standard Payments API uses a property named <spanx style="verb">requestId</spanx> in request body in order to provider idempotency in various use cases.</t>
  <t>Reference: https://developers.google.com/standard-payments/payment-processor-service-api/rest/v1/TopLevel/capture</t>
</list></t>

<t>Organization: BBVA</t>

<t><list style="symbols">
  <t>Description: BBVA Open Platform uses custom HTTP header called <spanx style="verb">X-Unique-Transaction-ID</spanx></t>
  <t>Reference: https://bbvaopenplatform.com/apiReference/APIbasics/content/x-unique-transaction-id</t>
</list></t>

<t>Organization: WebEngage</t>

<t><list style="symbols">
  <t>Description: WebEngage uses custom HTTP header called <spanx style="verb">x-request-id</spanx> to identify webhook POST requests uniquely to achieve events idempotency.</t>
  <t>Reference: https://docs.webengage.com/docs/webhooks</t>
</list></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This section is meant to inform developers, information providers,
and users of known security concerns specific to the idempotency keys.</t>

<t>For idempotent request handling, the resources MAY make use of the value in the idempotency key to look up a cache or a persistent store for duplicate requests matching the key. If the resource does not validate the value of the idempotency key prior to performing such a lookup, it MAY lead to various forms of security attacks and compromise. To avoid such situations, the resource SHOULD publish the expected format of the idempotency key, algorithm used to generate it and always validate the key value as per the published specification before processing any request.</t>

</section>
<section anchor="examples" title="Examples">

<t>The first example shows an idempotency-key header field with key value using UUID version 4 scheme:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "8e03978e-40d5-43e8-bc93-6894a57f9324"
]]></artwork></figure>

<t>Second example shows an idempotency-key header field with key value using some random string generator:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "clkyoesmbgybucifusbbtdsbohtyuuwz"
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC4122" target='https://www.rfc-editor.org/info/rfc4122'>
<front>
<title>A Universally Unique IDentifier (UUID) URN Namespace</title>
<author initials='P.' surname='Leach' fullname='P. Leach'><organization /></author>
<author initials='M.' surname='Mealling' fullname='M. Mealling'><organization /></author>
<author initials='R.' surname='Salz' fullname='R. Salz'><organization /></author>
<date year='2005' month='July' />
<abstract><t>This specification defines a Uniform Resource Name namespace for UUIDs (Universally Unique IDentifier), also known as GUIDs (Globally Unique IDentifier).  A UUID is 128 bits long, and can guarantee uniqueness across space and time.  UUIDs were originally used in the Apollo Network Computing System and later in the Open Software Foundation\'s (OSF) Distributed Computing Environment (DCE), and then in Microsoft Windows platforms.</t><t>This specification is derived from the DCE specification with the kind permission of the OSF (now known as The Open Group).  Information from earlier versions of the DCE specification have been incorporated into this document.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4122'/>
<seriesInfo name='DOI' value='10.17487/RFC4122'/>
</reference>



<reference  anchor="RFC4918" target='https://www.rfc-editor.org/info/rfc4918'>
<front>
<title>HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault' role='editor'><organization /></author>
<date year='2007' month='June' />
<abstract><t>Web Distributed Authoring and Versioning (WebDAV) consists of a set of methods, headers, and content-types ancillary to HTTP/1.1 for the management of resource properties, creation and management of resource collections, URL namespace manipulation, and resource locking (collision avoidance).</t><t>RFC 2518 was published in February 1999, and this specification obsoletes RFC 2518 with minor revisions mostly due to interoperability experience.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4918'/>
<seriesInfo name='DOI' value='10.17487/RFC4918'/>
</reference>



<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7942" target='https://www.rfc-editor.org/info/rfc7942'>
<front>
<title>Improving Awareness of Running Code: The Implementation Status Section</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='A.' surname='Farrel' fullname='A. Farrel'><organization /></author>
<date year='2016' month='July' />
<abstract><t>This document describes a simple process that allows authors of Internet-Drafts to record the status of known implementations by including an Implementation Status section.  This will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature.</t><t>This process is not mandatory.  Authors of Internet-Drafts are encouraged to consider using the process for their documents, and working groups are invited to think about applying the process to all of their protocol specifications.  This document obsoletes RFC 6982, advancing it to a Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='205'/>
<seriesInfo name='RFC' value='7942'/>
<seriesInfo name='DOI' value='10.17487/RFC7942'/>
</reference>




    </references>


<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Mark Nottingham for his support for this Internet Draft. We would like to acknowledge that this draft is inspired by Idempotency related patterns described in API documentation of <eref target="https://github.com/paypal/api-standards/blob/master/patterns.md#idempotency">PayPal</eref> and <eref target="https://stripe.com/docs/idempotency">Stripe</eref> as well as Internet Draft on <eref target="https://tools.ietf.org/html/draft-nottingham-http-poe-00">POST Once Exactly</eref> authored by Mark Nottingham.</t>

<t>The authors take all responsibility for errors and omissions.</t>

</section>
<section anchor="appendix" title="Appendix">

<section anchor="appendix-a-imported-abnf" title="Appendix A.  Imported ABNF">

<t>The following core rules are included by reference, as defined in Appendix B.1 of <xref target="RFC5234"/>: ALPHA (letters), CR (carriage return), CRLF (CR LF), CTL (controls), DIGIT (decimal 0-9), DQUOTE (double quote), HEXDIG (hexadecimal 0-9/A-F/a-f), LF (line feed), OCTET (any 8-bit sequence of data), SP (space), and VCHAR (any visible US-ASCII character).</t>

<t>The rules below are defined in <xref target="RFC7230"/>:</t>

<figure><artwork><![CDATA[
 obs-text      = <obs-text, see [RFC7230], Section 3.2.6>
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
i9/wa7ceqe8d9r75e+e//qKmsMs7AAA=

-->

</rfc>

